package healthy.rim.type;import javax.xml.bind.annotation.XmlAccessType;import javax.xml.bind.annotation.XmlAccessorType;import javax.xml.bind.annotation.XmlElement;import javax.xml.bind.annotation.XmlRootElement;import javax.xml.bind.annotation.XmlType;/** * An Interval (start to end, minimum to maximum) of values. * * @author Yosvany Llerena Rodr√≠guez <yosvanyllr@gmail.com> * @since 30-Jan-2013 */@XmlRootElement(name = "IVL")@XmlAccessorType(XmlAccessType.FIELD)@XmlType(name = "IVL")public class IVL<DataType> {    @XmlElement(name = "low", required = true)    private DataType low;    private DataType high;    public IVL() {     }    public IVL(DataType low, DataType high) {        this.low = low;        this.high = high;    }    public DataType getLow() {        return low;    }    public void setLow(DataType low) {        this.low = low;    }    public DataType getHigh() {        return high;    }    public void setHigh(DataType high) {        this.high = high;    }    @Override    public String toString() {        return (low.toString() + ", " + high.toString());    }    @Override    public int hashCode() {        int hash = 5;        hash = 83 * hash + (this.low != null ? this.low.hashCode() : 0);        hash = 83 * hash + (this.high != null ? this.high.hashCode() : 0);        return hash;    }    @Override    public boolean equals(Object obj) {        if (obj == null) {            return false;        }        if (getClass() != obj.getClass()) {            return false;        }        final IVL<DataType> other = (IVL<DataType>) obj;        if (this.low != other.low && (this.low == null || !this.low.equals(other.low))) {            return false;        }        if (this.high != other.high && (this.high == null || !this.high.equals(other.high))) {            return false;        }        return true;    }}